'use strict';

var expect = require('chai').expect;
var annotate = require('../../lib/annotate');

describe('annotate', function () {
  it('is a function', function () {
    expect(annotate).to.be.a('Function');
  });

  it('throws an error if given something that is not a function', function () {
    var fn = function () {
      annotate(42);
    };

    expect(fn).to.throw(Error, '[r42:annotate] fn is not a function');
  });

  it('returns an empty array if given a function that does not take arguments', function () {
    function testFn() {};
    var res = annotate(testFn);

    expect(res).to.be.an('Array').and.to.have.property('length', 0);
  });

  it('returns an array contaning the name of each arguments declared ' +
    'by the given function', function () {
    function testFn(arg1, arg2, arg3) {};
    var res = annotate(testFn);

    expect(res).to.be.an('Array').and.to.be.deep.eql(['arg1', 'arg2', 'arg3']);
  });
});
