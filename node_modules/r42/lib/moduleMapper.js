'use strict';

var _ = require('lodash');

function ModuleMapper(config) {
  if (!(this instanceof ModuleMapper)) {
    return new ModuleMapper(config);
  }

  if (!_.isObject(config)) {
    throw new Error('[r42] moduleMapper: invalid config object');
  }

  function escapeRegexp(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&')
  };

  this.$paths = _.map(config.paths || {}, function (to, from) {
    return {
      from: new RegExp('^' + escapeRegexp(from) + '(/|$)'),
      to: to
    };
  });
}
ModuleMapper.prototype.resolve = function (name) {
  _.each(this.$paths || {}, function (path) {
    var match;
    if (!(match = name.match(path.from))) {
      return;
    }

    name = name.replace(path.from, path.to + match[1]);
    return false;
  });

  return name;
}

module.exports = ModuleMapper;
